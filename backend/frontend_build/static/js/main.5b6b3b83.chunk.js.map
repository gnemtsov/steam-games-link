{"version":3,"sources":["serviceWorker.js","store/actionTypes.js","hoc/Popup/Backdrop/Backdrop.js","hoc/Popup/Popup.js","hoc/ErrorBoundary/ErrorBoundary.js","components/UsersList/UserAdd/UserAdd.js","components/UsersList/UserCard/Spinner/Spinner.js","components/UsersList/UserCard/UserCard.js","components/UsersList/UsersList.js","components/GamesList/GameCard/GameCard.js","components/GamesList/GamesList.js","App.js","store/reducers/index.js","store/sagas/index.js","index.js","components/UsersList/UserAdd/UserAdd.module.scss","components/GamesList/GamesList.module.scss","hoc/Popup/Popup.module.scss","components/UsersList/UsersList.module.scss","components/UsersList/UserCard/Spinner/Spinner.module.css","components/GamesList/GameCard/GameCard.module.scss","components/UsersList/UserCard/UserCard.module.scss","hoc/Popup/Backdrop/Backdrop.module.scss","hoc/ErrorBoundary/ErrorBoundary.module.scss"],"names":["Boolean","window","location","hostname","match","R_START_LOAD_MULTIPLAYER_GAMES","R_FINISH_LOAD_MULTIPLAYER_GAMES","R_START_USER_ADD","R_FINISH_USER_ADD","R_USER_DELETE","R_DO_INTERSECTION","S_LOAD_MULTIPLAYER_GAMES","S_USER_ADD","S_USER_DELETE","Backdrop","props","react_default","a","createElement","className","classes","onClick","clickHandler","Popup","Fragment","role","aria-modal","onKeyDown","e","keyCode","closeHandler","PopupHeader","PopupTitle","title","type","Close","PopupBody","children","Popup_Backdrop_Backdrop","show","defaultProps","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","caught","error","info","setState","showError","BrokenComponent","Component","connect","dispatch","errorMessage","payload","UserAdd","value","submitValue","tip","tipHighlightUrl","inputRef","React","createRef","handleChange","bind","assertThisInitialized","handleSubmit","current","focus","event","target","exec","preventDefault","submitHandler","tipClasses","Tip","push","Show","Container","onSubmit","InputContainer","Input","ref","tabIndex","placeholder","onChange","join","Highlight","Button","disabled","Spinner","Loader","freeze","Freeze","memo","removeRef","cardClasses","vanityurlClasses","Vanityurl","avatar","Avatar","src","alt","name","isLoading","Loading","Name","UserCard_Spinner_Spinner","Failed","shake","Shake","onTouchEnd","document","hasFocus","activeElement","key","AvatarContainer","NamesContainer","ErrorMessage","vanityurl","Remove","currentTarget","click","UsersList","shakingUsers","addShakingUser","filter","user","timerId","setTimeout","removeShakingUser","handleUserAdd","users","map","_ref","includes","userAdd","forEach","_ref2","clearTimeout","_this2","Controls","Title","hoc_ErrorBoundary_ErrorBoundary","UsersList_UserAdd_UserAdd","react_transition_group","List","i","_ref3","timeout","enter","classNames","UsersList_UserCard_UserCard","assign","userDelete","actionTypes","index","GameCard","concat","appId","logo","GamesList","nextProps","nextState","isCalculating","content","isMPGamesStaled","Error","userCount","Placeholder","intersection","length","GamesList_GameCard_GameCard","games","Wrapper","uniqueKey","undefined","steamId","App","resInterceptor","axios","interceptors","response","use","res","data","message","Promise","reject","loadMultiplayerGames","eject","popup","hoc_Popup_Popup","hideError","components_UsersList_UsersList","components_GamesList_GamesList","initialState","multiPlayerGames","isMPGamesLoading","reducer","arguments","action","objectSpread","startLoadMultiplayerGames","finishLoadMultiplayerGames","slice","startUserAdd","gamesIds","userData","keys","newGames","nameLowerCase","toLowerCase","finishUserAdd","splice","allArr","reduce","accumulator","currentArr","v","sort","b","doIntersection","rootSaga","regenerator_default","wrap","_context","prev","next","put","get","sent","cancel","stop","_marked","_context2","t0","delay","_marked2","_context3","_marked3","_context4","all","takeEvery","_marked4","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","dots","openPopup"],"mappings":"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","file":"static/js/main.5b6b3b83.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//reducer actions\nexport const R_START_LOAD_MULTIPLAYER_GAMES = 'R_START_LOAD_MULTIPLAYER_GAMES';\nexport const R_FINISH_LOAD_MULTIPLAYER_GAMES = 'R_FINISH_LOAD_MULTIPLAYER_GAMES';\nexport const R_START_USER_ADD = 'R_START_USER_ADD';\nexport const R_FINISH_USER_ADD = 'R_FINISH_USER_ADD';\nexport const R_USER_DELETE = 'R_USER_DELETE';\nexport const R_DO_INTERSECTION = 'R_DO_INTERSECTION';\nexport const R_SHOW_ERROR = 'R_SHOW_ERROR';\nexport const R_HIDE_ERROR = 'R_HIDE_ERROR';\n\n//sagas actions\nexport const S_LOAD_MULTIPLAYER_GAMES = 'S_LOAD_MULTIPLAYER_GAMES';\nexport const S_USER_ADD = 'S_USER_ADD';\nexport const S_USER_DELETE = 'S_USER_DELETE';\n","import React from 'react';\n\nimport classes from './Backdrop.module.scss';\n\nconst Backdrop = props => (\n    <div className={classes.Backdrop} onClick={props.clickHandler} />\n);\n\nexport default Backdrop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Backdrop from './Backdrop/Backdrop';\nimport classes from './Popup.module.scss';\n\nconst Popup = props => {\n    return (\n        <React.Fragment>\n            <div\n                className={classes.Popup}\n                role=\"dialog\"\n                aria-modal=\"true\"\n                onKeyDown={e => e.keyCode === 27 && props.closeHandler(e)}\n            >\n                <header className={classes.PopupHeader}>\n                    <div className={classes.PopupTitle}>{props.title}</div>\n                    <button\n                        type=\"button\"\n                        className={classes.Close}\n                        onClick={props.closeHandler}\n                    />\n                </header>\n                <div className={classes.PopupBody}>{props.children}</div>\n            </div>\n            <Backdrop show clickHandler={props.closeHandler} />\n        </React.Fragment>\n    );\n};\n\nPopup.defaultProps = {\n    title: 'Popup',\n};\n\nPopup.propTypes = {\n    title: PropTypes.string,\n    closeHandler: PropTypes.func.isRequired,\n};\n\nexport default Popup;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionTypes from '../../store/actionTypes';\r\n\r\nimport classes from './ErrorBoundary.module.scss';\r\n\r\n/*\r\nErrorBoundary is used to catch errors in sync code. \r\nIn development errors are reported in the browser by React itself.\r\nIn production we show a popup to the user and send information about errors to developers.\r\n\r\nErrors in async code are catched by individual try/catch blocks.\r\nAjax errors are catched (globaly) by axios interseptor, which is set up in the App component.\r\n*/\r\n\r\nclass ErrorBoundary extends Component {\r\n    static propTypes = {\r\n        showError: PropTypes.func.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { caught: false };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ caught: true });\r\n\r\n        if (process.env.NODE_ENV === 'production') {\r\n            this.props.showError('Something went wrong!');\r\n            //TODO report errors to developers\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.caught) {\r\n            return <div className={classes.BrokenComponent}>Broken :(</div>;\r\n        }\r\n\r\n        return <React.Fragment>{this.props.children}</React.Fragment>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showError: errorMessage =>\r\n            dispatch({\r\n                type: actionTypes.R_SHOW_ERROR,\r\n                payload: { errorMessage },\r\n            }),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ErrorBoundary);\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './UserAdd.module.scss';\n\nclass UserAdd extends Component {\n    static propTypes = {\n        submitHandler: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '', //value of input\n            submitValue: '', //value to send to the back-end\n            tip: false, //show tip under the input field?\n            tipHighlightUrl: false, //is value parsed as an url?\n        };\n\n        this.inputRef = React.createRef();\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.inputRef.current.focus();\n    }\n\n    handleChange(event) {\n        const { value } = event.target;\n        const regExp = /steamcommunity\\.com\\/id\\/([^/]+)$/i;\n        const match = regExp.exec(value);\n\n        this.setState({\n            value,\n            submitValue: match === null ? value : match[1],\n            tip: value !== '',\n            tipHighlightUrl: match !== null,\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { submitValue } = this.state;\n\n        this.props.submitHandler(submitValue);\n\n        this.inputRef.current.focus();\n\n        this.setState({\n            value: '',\n            submitValue: '',\n            tip: false,\n            tipHighlightUrl: false,\n        });\n    }\n\n    render() {\n        let tipClasses = [classes.Tip];\n        if (this.state.tip) {\n            tipClasses.push(classes.Show);\n        }\n\n        return (\n            <form className={classes.Container} onSubmit={this.handleSubmit}>\n                <div className={classes.InputContainer}>\n                    <input\n                        type=\"text\"\n                        className={classes.Input}\n                        ref={this.inputRef}\n                        tabIndex=\"1\"\n                        value={this.state.value}\n                        placeholder=\"Username or Steam community url\"\n                        onChange={this.handleChange}\n                    />\n                    <div className={tipClasses.join(' ')}>\n                        <span\n                            className={\n                                !this.state.tipHighlightUrl\n                                    ? classes.Highlight\n                                    : ''\n                            }\n                        >\n                            [username]\n                        </span>\n                        {' or '}\n                        <span\n                            className={\n                                this.state.tipHighlightUrl\n                                    ? classes.Highlight\n                                    : ''\n                            }\n                        >\n                            steamcommunity.com/id/[username]\n                        </span>\n                    </div>\n                </div>\n                <button\n                    type=\"submit\"\n                    className={classes.Button}\n                    tabIndex=\"2\"\n                    disabled={this.state.value === ''}\n                >\n                    ADD\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default UserAdd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './Spinner.module.css';\n\nconst Spinner = props => (\n    <div\n        className={classes.Loader + (props.freeze ? ' ' + classes.Freeze : '')}\n    >\n        <div />\n        <div />\n        <div />\n        <div />\n    </div>\n);\n\nSpinner.propTypes = {\n    freeze: PropTypes.bool,\n};\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from './Spinner/Spinner';\nimport classes from './UserCard.module.scss';\n\nconst UserCard = props => {\n    const removeRef = React.createRef();\n\n    const onKeyDownHandler = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n            event.currentTarget.click();\n        }\n    };\n\n    const onTouchEndHandler = event => {\n        if (\n            !document.hasFocus() ||\n            document.activeElement !== removeRef.current\n        ) {\n            event.preventDefault();\n            removeRef.current.focus();\n        }\n    };\n\n    let cardClasses = [classes.Container];\n    let vanityurlClasses = [classes.Vanityurl];\n    let avatar = (\n        <img className={classes.Avatar} src={props.avatar} alt={props.name} />\n    );\n\n    if (props.isLoading) {\n        cardClasses.push(classes.Loading);\n        vanityurlClasses.push(classes.Name);\n        avatar = <Spinner />;\n    } \n    \n    if (props.errorMessage) {\n        cardClasses.push(classes.Failed);\n        avatar = <Spinner freeze />;\n    } \n    \n    if (props.shake) {\n        cardClasses.push(classes.Shake);\n    }\n\n    return (\n        <div className={cardClasses.join(' ')} onTouchEnd={onTouchEndHandler}>\n            <div key=\"avatar-container\" className={classes.AvatarContainer}>\n                {avatar}\n            </div>\n            <div key=\"names-container\" className={classes.NamesContainer}>\n                <div className={classes.Name}>{props.name}</div>\n                <div className={classes.ErrorMessage}>{props.errorMessage}</div>\n                <div className={vanityurlClasses.join(' ')}>\n                    {props.vanityurl}\n                </div>\n            </div>\n            <button\n                key=\"remove\"\n                className={classes.Remove}\n                tabIndex={props.tabIndex}\n                ref={removeRef}\n                onClick={props.clickHandler}\n                onKeyDown={onKeyDownHandler}\n            />\n        </div>\n    );\n};\n\nUserCard.propTypes = {\n    steamId: PropTypes.string,\n    vanityurl: PropTypes.string.isRequired,\n    errorMessage: PropTypes.string,\n    isLoading: PropTypes.bool.isRequired,\n    name: PropTypes.string,\n    avatar: PropTypes.string,\n    tabIndex: PropTypes.number,\n    clickHandler: PropTypes.func.isRequired,\n};\n\nexport default React.memo(UserCard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nimport ErrorBoundary from '../../hoc/ErrorBoundary/ErrorBoundary';\nimport * as actionTypes from '../../store/actionTypes';\n\nimport UserAdd from './UserAdd/UserAdd';\nimport UserCard from './UserCard/UserCard';\n\nimport classes from './UsersList.module.scss';\n\nclass UsersList extends Component {\n    static defaultProps = {\n        title: 'Steam Games Link',\n    };\n\n    static propTypes = {\n        title: PropTypes.string,\n        users: PropTypes.arrayOf(\n            PropTypes.shape({\n                steamId: PropTypes.string,\n                vanityurl: PropTypes.string,\n                isLoading: PropTypes.bool,\n                name: PropTypes.string,\n                realName: PropTypes.string,\n                avatar: PropTypes.string,\n                games: PropTypes.arrayOf(PropTypes.string),\n            })\n        ).isRequired,\n        userAdd: PropTypes.func.isRequired,\n        userDelete: PropTypes.func.isRequired,\n    };\n\n    state = {\n        shakingUsers: [], //users, who were added twice [{vanityurl, timerId}...]\n    };\n\n    componentWillUnmount() {\n        this.state.shakingUsers.forEach(({ timerId }) => clearTimeout(timerId));\n    }\n\n    addShakingUser = vanityurl => {\n        this.setState(state => {\n            const shakingUsers = state.shakingUsers.filter(\n                user => user.vanityurl !== vanityurl\n            );\n\n            const timerId = setTimeout(() => {\n                this.removeShakingUser(vanityurl);\n            }, 1000);\n\n            shakingUsers.push({ vanityurl, timerId });\n\n            return { shakingUsers };\n        });\n    };\n\n    removeShakingUser = vanityurl => {\n        this.setState(state => {\n            return {\n                shakingUsers: state.shakingUsers.filter(\n                    user => user.vanityurl !== vanityurl\n                ),\n            };\n        });\n    };\n\n    handleUserAdd = vanityurl => {\n        const userExists = this.props.users\n            .map(({ vanityurl }) => vanityurl)\n            .includes(vanityurl);\n\n        if (userExists) {\n            this.addShakingUser(vanityurl);\n        } else {\n            this.props.userAdd(vanityurl);\n        }\n    };\n\n    render() {\n        return (\n            <header className={classes.Container}>\n                <div className={classes.Controls}>\n                    <h1 className={classes.Title}>{this.props.title}</h1>\n                    <ErrorBoundary>\n                        <UserAdd submitHandler={this.handleUserAdd} />\n                    </ErrorBoundary>\n                </div>\n                <TransitionGroup className={classes.List}>\n                    {this.props.users.map((user, i) => {\n                        const tabIndex = 10 + i;\n\n                        const shake = this.state.shakingUsers\n                            .map(({ vanityurl }) => vanityurl)\n                            .includes(user.vanityurl);\n\n                        return (\n                            <CSSTransition\n                                key={user.vanityurl}\n                                timeout={500}\n                                enter={false}\n                                classNames=\"fade\"\n                            >\n                                <ErrorBoundary>\n                                    <UserCard\n                                        {...user}\n                                        tabIndex={tabIndex}\n                                        shake={shake}\n                                        clickHandler={() =>\n                                            this.props.userDelete(i)\n                                        }\n                                    />\n                                </ErrorBoundary>\n                            </CSSTransition>\n                        );\n                    })}\n                </TransitionGroup>\n            </header>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userAdd: vanityurl =>\n            dispatch({\n                type: actionTypes.S_USER_ADD,\n                payload: { vanityurl },\n            }),\n        userDelete: i =>\n            dispatch({\n                type: actionTypes.S_USER_DELETE,\n                payload: { index: i },\n            }),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UsersList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './GameCard.module.scss';\n\nconst GameCard = props => (\n    <div className={classes.Container}>\n        <img\n            src={`http://media.steampowered.com/steamcommunity/public/images/apps/${\n                props.appId\n            }/${props.logo}.jpg`}\n            alt=\"\"\n        />\n        <div className={classes.Name}>{props.name}</div>\n    </div>\n);\n\nGameCard.propTypes = {\n    appId: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    logo: PropTypes.string.isRequired,\n};\n\nexport default GameCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport GameCard from './GameCard/GameCard';\n\nimport classes from './GamesList.module.scss';\n\nclass GamesList extends Component {\n    static propTypes = {\n        isMPGamesStaled: PropTypes.bool.isRequired,\n        games: PropTypes.shape({\n            name: PropTypes.string,\n            logo: PropTypes.string,\n        }).isRequired,\n        uniqueKey: PropTypes.string.isRequired,\n        userCount: PropTypes.number.isRequired,\n        intersection: PropTypes.arrayOf(PropTypes.string).isRequired,\n        isCalculating: PropTypes.bool.isRequired,\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return !nextProps.isCalculating;\n    }\n\n    render() {\n        let content = null;\n\n        if (this.props.isMPGamesStaled) {\n            content = (\n                <div className={classes.Error}>\n                    Failed to fetch all multiplayer games list from SteamSpyAPI. Try later.\n                </div>\n            );\n        } else if (this.props.userCount === 0) {\n            content = (\n                <div className={classes.Placeholder}>\n                    Common multiplayer games. Start by adding a user.\n                </div>\n            );\n        } else if (this.props.userCount === 1) {\n            content = (\n                <div className={classes.Placeholder}>\n                    Add another user to see the list of games.\n                </div>\n            );\n        } else if (this.props.intersection.length > 0) {\n            content = (\n                <div className={classes.List}>\n                    {this.props.intersection.map(appId => (\n                        <GameCard\n                            key={appId}\n                            appId={appId}\n                            name={this.props.games[appId].name}\n                            logo={this.props.games[appId].logo}\n                        />\n                    ))}\n                </div>\n            );\n        } else {\n            content = (\n                <div className={classes.Placeholder}>\n                    These users don't have any common multiplayer games.\n                </div>\n            );\n        }\n\n        return (\n            <main className={classes.Wrapper}>\n                <TransitionGroup className={classes.Container}>\n                    <CSSTransition\n                        key={this.props.uniqueKey}\n                        timeout={800}\n                        classNames=\"slide\"\n                    >\n                        <div>{content}</div>\n                    </CSSTransition>\n                </TransitionGroup>\n            </main>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isMPGamesStaled: state.isMPGamesStaled,\n        games: state.games,\n        userCount: state.users.filter(({ steamId }) => steamId !== undefined)\n            .length,\n        uniqueKey: state.users.map(({ steamId }) => steamId || '').join(''),\n        intersection: state.intersection,\n        isCalculating: state.isCalculating,\n    };\n};\n\nexport default connect(mapStateToProps)(GamesList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\nimport * as actionTypes from './store/actionTypes';\nimport Popup from './hoc/Popup/Popup';\n\nimport UsersList from './components/UsersList/UsersList';\nimport GamesList from './components/GamesList/GamesList';\n\nclass App extends Component {\n    static propTypes = {\n        errorMessage: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.oneOf([null]),\n        ]),\n        showError: PropTypes.func.isRequired,\n        hideError: PropTypes.func.isRequired,\n        loadMultiplayerGames: PropTypes.func.isRequired,\n    };\n\n    componentDidMount() {\n        //Set up axios interceptor to catch all errors\n        //If response was received and can be handled axios promise will reject with error message\n        //In case of other errors axios promise will resolve with undefined value and popup will be shown\n        this.resInterceptor = axios.interceptors.response.use(\n            res => res,\n            error => {\n                if (error.response && error.response.data !== undefined) {\n                    const message = error.response.data;\n                    const handledErrorsMessages = [\n                        'User not found',\n                        'Not a public profile',\n                    ];\n\n                    if (handledErrorsMessages.includes(message)) {\n                        return Promise.reject(message);\n                    }\n                }\n\n                if (process.env.NODE_ENV === 'production') {\n                    this.props.showError('Something went wrong!');\n                    //TODO report errors in production\n                } else {\n                    this.props.showError(\n                        'Error in Ajax request, see console for details!'\n                    );\n                    if (error.response) {\n                        console.log(\n                            'The request was made and the server responded with a status code that falls out of the range of 2xx'\n                        );\n                        console.log('Response', error.response);\n                    } else if (error.request) {\n                        console.log(\n                            'The request was made but no response was received'\n                        );\n                        console.log('Request', error.request);\n                    } else {\n                        console.log(\n                            'Something happened in setting up the request that triggered an Error'\n                        );\n                        console.log('Error', error.message);\n                    }\n                    console.log('Config', error.config);\n                }\n            }\n        );\n\n        //Load multiplayer games from the back-end\n        this.props.loadMultiplayerGames();\n    }\n\n    componentWillUnmount() {\n        //eject interceptor when component is unmounted\n        axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    render() {\n        let popup = null;\n        if (this.props.errorMessage !== null) {\n            popup = (\n                <Popup title=\"Error\" closeHandler={this.props.hideError}>\n                    <div className=\"classes.ErrorContainer\">\n                        <span className=\"classes.ErrorMessage\">\n                            {this.props.errorMessage}\n                        </span>\n                    </div>\n                </Popup>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {popup}\n                <UsersList />\n                <GamesList />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        errorMessage: state.errorMessage,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        showError: errorMessage =>\n            dispatch({\n                type: actionTypes.R_SHOW_ERROR,\n                payload: { errorMessage },\n            }),\n        hideError: () =>\n            dispatch({\n                type: actionTypes.R_HIDE_ERROR,\n            }),\n        loadMultiplayerGames: () =>\n            dispatch({\n                type: actionTypes.S_LOAD_MULTIPLAYER_GAMES,\n            }),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n    multiPlayerGames: [], //an array of multiplayer games, ['appId', 'appId'...]\n    games: {}, //a handbook games data, {[appId]: {app-data}}\n    users: [], //an array of users, [isLoading, errorMessage, ...user-data, games: ['appId', 'appId'...]}]\n    intersection: [], //an array of displayed games, ['appId', 'appId'...]\n    isMPGamesLoading: false, //is loading multiplayer games from API?\n    isMPGamesStaled: false, //the first user has been added and MPGames are still loading?\n    isCalculating: false, //is intersection calculation pending?\n    errorMessage: null, //error message, null || string\n};\n\n//Reducer's functions\nconst startLoadMultiplayerGames = state => {\n    return { ...state, isMPGamesLoading: true };\n};\n\nconst finishLoadMultiplayerGames = (state, action) => {\n    return {\n        ...state,\n        multiPlayerGames: action.payload,\n        isMPGamesLoading: false,\n        isMPGamesStaled: false,\n    };\n};\n\nconst startUserAdd = (state, action) => {\n    const { vanityurl } = action.payload;\n\n    const users = state.users.slice();\n    users.push({ isLoading: true, vanityurl });\n\n    return { ...state, users };\n};\n\nconst finishUserAdd = (state, action) => {\n    const userData = action.payload;\n\n    //game ids\n    let gamesIds;\n    if (userData.games !== undefined) {\n        gamesIds = Object.keys(userData.games);\n    }\n\n    //fill in new user data and games\n    const users = state.users.map(user => {\n        if (user.vanityurl === userData.vanityurl) {\n            return {\n                ...userData,\n                games: gamesIds,\n                isLoading: false,\n            };\n        } else {\n            return user;\n        }\n    });\n\n    //fill in games \"handbook\" with new games data\n    let newGames = {};\n    if (gamesIds !== undefined) {\n        gamesIds.forEach(appId => {\n            newGames[appId] = {\n                appId,\n                ...userData.games[appId],\n                nameLowerCase: userData.games[appId].name.toLowerCase(), //for sorting\n            };\n        });\n    }\n    const games = { ...state.games, ...newGames };\n\n    return {\n        ...state,\n        games,\n        users,\n        isCalculating: userData.errorMessage === undefined,\n        isMPGamesStaled: state.isMPGamesLoading, //set to true if multiplayer games still loading\n    };\n};\n\nconst userDelete = (state, action) => {\n    const { index } = action.payload;\n\n    const users = state.users.slice();\n    users.splice(index, 1);\n\n    return { ...state, users, isCalculating: true };\n};\n\nconst doIntersection = state => {\n    let intersection = [];\n\n    //gather all users's games into an array of arrays\n    let allArr = state.users\n        .filter(({ games }) => games !== undefined)\n        .map(({ games }) => games);\n\n    if (allArr.length > 1) {\n        //add multiplayer games\n        allArr.push(state.multiPlayerGames);\n\n        //calculate intersection of the arrays\n        intersection = allArr.reduce((accumulator, currentArr) =>\n            accumulator.filter(v => currentArr.includes(v))\n        );\n\n        //sort intersection according to lowercased games names\n        intersection.sort((a, b) => {\n            if (state.games[a].nameLowerCase > state.games[b].nameLowerCase) {\n                return 1;\n            }\n            if (state.games[a].nameLowerCase < state.games[b].nameLowerCase) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n\n    return { ...state, intersection, isCalculating: false };\n};\n\nconst showError = (state, action) => {\n    const { errorMessage } = action.payload;\n    return { ...state, errorMessage };\n};\n\nconst hideError = state => {\n    return { ...state, errorMessage: null };\n};\n\n//Reducer\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.R_START_LOAD_MULTIPLAYER_GAMES:\n            return startLoadMultiplayerGames(state, action);\n\n        case actionTypes.R_FINISH_LOAD_MULTIPLAYER_GAMES:\n            return finishLoadMultiplayerGames(state, action);\n\n        case actionTypes.R_START_USER_ADD:\n            return startUserAdd(state, action);\n\n        case actionTypes.R_FINISH_USER_ADD:\n            return finishUserAdd(state, action);\n\n        case actionTypes.R_USER_DELETE:\n            return userDelete(state, action);\n\n        case actionTypes.R_DO_INTERSECTION:\n            return doIntersection(state, action);\n\n        case actionTypes.R_SHOW_ERROR:\n            return showError(state, action);\n\n        case actionTypes.R_HIDE_ERROR:\n            return hideError(state, action);\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { put, call, cancel, takeEvery, all } from 'redux-saga/effects';\nimport { delay } from 'redux-saga';\nimport axios from 'axios';\n\nimport * as actionTypes from '../actionTypes';\n\n/*\nSagas logic notes\n- Load array of multiplayer games (loadMultiplayerGames saga) once when App component is mounted.\n- When user is added add his/her data, games list and games data to the store (userAdd saga).\n- When user is deleted remove user data and games list from the store (userDelete saga).\n\nEach time when a user is added or deleted recalculate intersection.\n*/\n\nfunction* loadMultiplayerGames() {\n    yield put({ type: actionTypes.R_START_LOAD_MULTIPLAYER_GAMES });\n\n    const response = yield call(axios.get, '/multiplayergames');\n    if (response === undefined) {\n        yield cancel();\n    }\n\n    yield put({\n        type: actionTypes.R_FINISH_LOAD_MULTIPLAYER_GAMES,\n        payload: response.data,\n    });\n}\n\nfunction* userAdd(action) {\n    const { vanityurl } = action.payload;\n\n    yield put({ type: actionTypes.R_START_USER_ADD, payload: { vanityurl } });\n\n    let response;\n    try {\n        response = yield call(axios.get, `/userownedgames/${vanityurl}`);\n    } catch (errorMessage) {\n        yield put({\n            type: actionTypes.R_FINISH_USER_ADD,\n            payload: { errorMessage, vanityurl },\n        });\n\n        yield cancel();\n    }\n\n    if (response === undefined) {\n        yield cancel();\n    }\n\n    yield put({\n        type: actionTypes.R_FINISH_USER_ADD,\n        payload: { ...response.data, vanityurl },\n    });\n\n    yield delay(500);\n    yield put({ type: actionTypes.R_DO_INTERSECTION });\n}\n\nfunction* userDelete(action) {\n    const { index } = action.payload;\n\n    yield put({ type: actionTypes.R_USER_DELETE, payload: { index } });\n\n    yield delay(500);\n    yield put({ type: actionTypes.R_DO_INTERSECTION });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        takeEvery(actionTypes.S_LOAD_MULTIPLAYER_GAMES, loadMultiplayerGames),\n        takeEvery(actionTypes.S_USER_ADD, userAdd),\n        takeEvery(actionTypes.S_USER_DELETE, userDelete),\n    ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport * as serviceWorker from './serviceWorker';\n\nimport './polyfills.js';\n\nimport './index.css';\nimport App from './App';\n\nimport rootReducer from './store/reducers';\nimport rootSaga from './store/sagas';\n\nconst composeEnhancers =\n    process.env.NODE_ENV === 'development'\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        : null || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nif (process.env.NODE_ENV === 'development') {\n    if (module.hot) {\n        module.hot.accept('./store/reducers', () => {\n            store.replaceReducer(rootReducer);\n        });\n    }\n}\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>,\n            document.getElementById('root')\n        );\n    });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserAdd_Container__1XIsc\",\"InputContainer\":\"UserAdd_InputContainer__ssjY1\",\"Input\":\"UserAdd_Input__Tn5iZ\",\"Tip\":\"UserAdd_Tip__21YQ-\",\"Show\":\"UserAdd_Show__Saiwe\",\"Highlight\":\"UserAdd_Highlight__3Wq6K\",\"Button\":\"UserAdd_Button__StxZA\",\"Loading\":\"UserAdd_Loading__vt8S1\",\"dots\":\"UserAdd_dots__4zp7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"GamesList_Wrapper__3XHDG\",\"Container\":\"GamesList_Container__1Q530\",\"Placeholder\":\"GamesList_Placeholder__2lcws\",\"Error\":\"GamesList_Error__5QhRf\",\"List\":\"GamesList_List__3s5sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Popup\":\"Popup_Popup__1XPdd\",\"openPopup\":\"Popup_openPopup__oy1fu\",\"PopupHeader\":\"Popup_PopupHeader__CbTo5\",\"PopupTitle\":\"Popup_PopupTitle__3IBb8\",\"Close\":\"Popup_Close__1X-Mq\",\"PopupBody\":\"Popup_PopupBody__1Q4dR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UsersList_Container__1QRA_\",\"Title\":\"UsersList_Title__3M-iX\",\"List\":\"UsersList_List__4JuhO\",\"Controls\":\"UsersList_Controls__2EoF-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1EjO9\",\"Freeze\":\"Spinner_Freeze__25Wu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GameCard_Container__13Jts\",\"Name\":\"GameCard_Name__2mhtZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserCard_Container__1FUWk\",\"Shake\":\"UserCard_Shake__254T7\",\"shake\":\"UserCard_shake__mg-Bu\",\"AvatarContainer\":\"UserCard_AvatarContainer__1FrYE\",\"NamesContainer\":\"UserCard_NamesContainer__1yEwU\",\"Name\":\"UserCard_Name__1pELW\",\"Loading\":\"UserCard_Loading__3ljcK\",\"Failed\":\"UserCard_Failed__dJR1v\",\"Vanityurl\":\"UserCard_Vanityurl__372L1\",\"ErrorMessage\":\"UserCard_ErrorMessage__3NqL1\",\"Remove\":\"UserCard_Remove__2SokG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3G-Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BrokenComponent\":\"ErrorBoundary_BrokenComponent__2Y-jb\"};"],"sourceRoot":""}